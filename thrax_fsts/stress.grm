import 'byte.grm' as bytelib;   # copy this file from grammars/byte.grm
Letter = bytelib.kAlpha;        # kAlpha is defined in byte.grm
Sigma = Letter | "'";           # alphabet also includes stress mark
Vowel = "a" | "e" | "i" | "o" | "u" | "A" | "E" | "I" | "O" | "U";
Consonant = Letter - Vowel;
Nucleus = Vowel+;

#These are all possible unstressed syllables that could come before a syllable
#That we want to stress
Unstressed = (Consonant Nucleus Consonant+) | ("[BOS]" Nucleus Consonant+) | ("[BOS]" Consonant+);

#The left context is an unstressed syllable and the preceding consonants or
#BOS and preceding consonants which deals with part 2
#The right context is the nucleus and consonant and then the nucleus and 
#consonant of the next syllable which takes care of 3
#It also won't take anything that has a ' in it which takes care of 1
StressSyl = CDRewrite[("":"'"), (Unstressed Consonant*) | ("[BOS]" Consonant*), Nucleus Consonant+Nucleus ,Sigma*,'ltr', 'obl'];


#Only takes single syllable words and adds stress before nucleus
#This takes care of requirement 4
StressIndividual = CDRewrite["":"'", "[BOS]" Consonant*, Nucleus Consonant* "[EOS]", Sigma*, 'ltr', 'obl'];

#This combines the rule for monosyllabic words and multi-syllable words
export Stress = Optimize[StressSyl @ StressIndividual];

export InvertedStress = Invert[Stress];

export StressWords = CDRewrite[Stress,"[BOS]" | " ", " "|"[EOS]", bytelib.kBytes*, 'ltr', 'obl'];


