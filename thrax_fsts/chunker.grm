import 'byte.grm' as bytelib;     
import 'tags.grm' as tags;  

Sigma = (tags.Tags) | (bytelib.kBytes);
SigmaStar = Optimize[Sigma*];

Art = "Art";
Quant = "Quant";
Adj = "Adj";
Noun = "Noun";
Verb = "Verb";

export NP = Optimize[(Art|Quant)? Adj* Noun+];
export MakeNmod = Optimize[CDRewrite[("Noun":"Nmod"), tags.Tags*, "Noun",SigmaStar, 'ltr', 'obl']];
export TransformNP = Optimize[NP @ MakeNmod];
export BracketNP = ("" : "<") NP ("" : ">");
export Brackets1 = Optimize[SigmaStar (BracketNP SigmaStar)*];
export Brackets2 = CDRewrite[BracketNP, "", "", SigmaStar,'sim','obl'];
export BracketTransform = CDRewrite[("" : "<") TransformNP ("" :">"), "", "", SigmaStar,'sim','obl'];
export BracketResults = Optimize[Project[(Quant Noun+ Verb) @ BracketTransform, 'output']];
